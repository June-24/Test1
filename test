package com.example.test1;

import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.Messages;
import com.intellij.openapi.wm.ToolWindow;
import com.intellij.openapi.wm.ToolWindowFactory;
import com.intellij.openapi.wm.ToolWindowManager;
import com.intellij.openapi.wm.ToolWindowManagerListener;
import com.intellij.ui.content.Content;
import com.intellij.ui.content.ContentFactory;
import org.jetbrains.annotations.NotNull;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class MyToolWindowActivationListener implements ToolWindowManagerListener {

    @Override
    public void toolWindowShown(@NotNull ToolWindow toolWindow) {
        if ("HelloWorld".equals(toolWindow.getId())) {
            Project project = toolWindow.getProject();

            // Prompt for API key
            String apiKey = Messages.showInputDialog(
                    project,
                    "Please enter your API key:",
                    "API Key Required",
                    Messages.getQuestionIcon()
            );

            if (apiKey != null && !apiKey.trim().isEmpty()) {
                // Verify the API key
                boolean isValid = verifyApiKey(apiKey);

                if (isValid) {
                    // Create and add content to the tool window if the API key is valid
                    MyToolWindow myToolWindow = new MyToolWindow();
                    ContentFactory contentFactory = ContentFactory.getInstance();
                    Content content = contentFactory.createContent(myToolWindow.getContent(), "", false);
                    toolWindow.getContentManager().removeAllContents(true);  // Remove any previous content
                    toolWindow.getContentManager().addContent(content);
                } else {
                    Messages.showErrorDialog(
                            project,
                            "Invalid API key. Please try again.",
                            "API Key Error"
                    );
                    toolWindow.getContentManager().removeAllContents(true);  // Clear the tool window content
                }
            } else {
                Messages.showErrorDialog(
                        project,
                        "API key cannot be empty. Please try again.",
                        "API Key Error"
                );
                toolWindow.getContentManager().removeAllContents(true);  // Clear the tool window content
            }
        }
    }

    private boolean verifyApiKey(String apiKey) {
        try {
            URL url = new URL("http://localhost:5000/verify?key=" + apiKey);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");

            int responseCode = con.getResponseCode();
            if (responseCode == 200) {
                try (BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()))) {
                    String response = in.readLine();
                    return "valid".equalsIgnoreCase(response);
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return false;
    }
}




