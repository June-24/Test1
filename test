package com.example.test1;

import com.intellij.openapi.ui.Messages;
import com.intellij.openapi.wm.ToolWindow;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Scanner;

public class MyApiKeyInputForm {
    private JPanel apiKeyPanel;
    private JTextField apiKeyField;
    private JButton submitButton;
    private ToolWindow toolWindow;

    public MyApiKeyInputForm(ToolWindow toolWindow) {
        this.toolWindow = toolWindow;
        apiKeyPanel = new JPanel(new BorderLayout());

        JLabel apiKeyLabel = new JLabel("Enter API Key:");
        apiKeyField = new JTextField(20);
        submitButton = new JButton("Submit");

        JPanel inputPanel = new JPanel(new FlowLayout());
        inputPanel.add(apiKeyLabel);
        inputPanel.add(apiKeyField);

        apiKeyPanel.add(inputPanel, BorderLayout.CENTER);
        apiKeyPanel.add(submitButton, BorderLayout.SOUTH);

        submitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String apiKey = apiKeyField.getText().trim();
                if (!apiKey.isEmpty()) {
                    if (validateApiKey(apiKey)) {
                        showChatPage();
                    } else {
                        Messages.showErrorDialog("Invalid API Key. Please try again.", "Error");
                    }
                }
            }
        });
    }

    public JPanel getContent() {
        return apiKeyPanel;
    }

    private boolean validateApiKey(String apiKey) {
        // Replace with your actual API key validation logic
        try {
            URL url = new URL("http://localhost:5000/validate_api_key?api_key=" + apiKey);
            HttpURLConnection con = (HttpURLConnection) url.openConnection();
            con.setRequestMethod("GET");
            int responseCode = con.getResponseCode();
            con.disconnect();
            return responseCode == 200;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }

    private void showChatPage() {
        MyToolWindow myToolWindow = new MyToolWindow();

        ContentFactory contentFactory = ContentFactory.getInstance();
        Content content = contentFactory.createContent(myToolWindow.getContent(), "", false);

        toolWindow.getContentManager().removeAllContents(true);
        toolWindow.getContentManager().addContent(content);
    }
}




